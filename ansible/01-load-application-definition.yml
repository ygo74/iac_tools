---
# -----------------------------------------------------------------------------
# Load application definition
# -----------------------------------------------------------------------------
- name: Load application definition
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    application_definition_path: '../../infrastructure/definitions/{{ application }}.yml'


    # -----------------------------------------------------------------------------
    # application definition roles
    # -----------------------------------------------------------------------------
    # shortcut to application.roles
    application_definition_roles: '{{ application_definition.application.roles }}'

    # default application definition
    application_definition_role_default: >-
      {{ application_definition_roles.default | default({}) }}

    # default application definition
    application_definition_role: >-
      {{ application_definition_roles[item.value.server_role] | default({}) }}

    # -----------------------------------------------------------------------------
    # application definition locations
    # -----------------------------------------------------------------------------
    # Shortcut to application.locations
    application_definition_locations: '{{ application_definition.application.locations }}'

    # Shortcut to application.locations[server_location].roles
    application_definition_location: >-
      {{ (application_definition_locations[item.value.server_location]
           | default({})
         ).roles
      }}

    # application definition default role in location
    application_definition_location_role_default: >-
      {{ application_definition_location.default | default({}) }}

    # application definition role in location
    application_definition_location_role: >-
      {{ application_definition_location[item.value.server_role] | default({}) }}

    # -----------------------------------------------------------------------------
    # Environment application definition roles
    # -----------------------------------------------------------------------------
    # shortcut to application.environment[server_environment].roles
    application_environment_roles: >-
      {{ application_definition.environments[item.value.server_environment].roles | default({}) }}

    # application environment default role
    application_environment_role_default: >-
      {{ application_environment_roles.default | default({}) }}

    # application environment role
    application_environment_role: >-
      {{ application_environment_roles[item.value.server_role] | default({}) }}

    # -----------------------------------------------------------------------------
    # Environment application definition locations
    # -----------------------------------------------------------------------------
    # shortcut to application.environment[server_environment].locations
    application_environment_locations: >-
      {{ application_definition.environments[item.value.server_environment].locations |default({}) }}

    # Shortcut to application.environment[server_environment].locations.roles
    application_environment_location: >-
      {{ (application_environment_locations[item.value.server_location]
           | default({})
         ).roles
      }}

    # application defenvironmentinition default role in location
    application_environment_location_role_default: >-
      {{ application_environment_location.default | default({}) }}

    # application definition role in location
    application_environment_location_role: >-
      {{ application_environment_location[item.value.server_role] | default({}) }}


  tasks:

    # -----------------------------------------------------------------------------
    # Assert playbook execution
    # -----------------------------------------------------------------------------
    - name: Assert playbook execution
      block:
        # Check mandatory variables
        - name: Check mandatory variables
          assert:
            that:
              - application is defined
            fail_msg: "Missing mandatory variables"

        # Check application definition file exists
        - name: Check application definition file exists
          assert:
            that:
              - lookup('file', application_definition_path, errors='ignore') != none
            fail_msg: "Missing application definition file {{ application_definition_path }}"

    # -----------------------------------------------------------------------------
    # Load application definition and check the structure
    # -----------------------------------------------------------------------------
    - name: Load application definition and check the structure
      block:
        # Load application definition
        - name: Load application definition
          include_vars:
            file: '{{ application_definition_path }}'
            name: application_definition
          tags:
            - always

        # Check default structure
        - name: Check default structure
          assert:
            that:
              - application_definition.application is defined
              - application_definition.application.roles is defined
              - application_definition.application.roles.keys() | length > 0
              - application_definition.application.locations.keys() | length > 0
              - application_definition.environments is defined
              - application_definition.environments.keys() | length > 0
            fail_msg: "Default structure is incorrect"

        # Check environments structure
        - name: Check environments structure
          assert:
            that:
              - item.value.servers is defined
              - item.value.servers | length > 0
            fail_msg: "Missing servers defintions in environment {{ item.key }}"
          loop: '{{ application_definition.environments | dict2items }}'

    # -----------------------------------------------------------------------------
    # Create the definition for each server
    # -----------------------------------------------------------------------------
    - name: Create the definition for each server
      block:
        - name: Select servers
          set_fact:
            application_servers_selected: "{{ application_servers_selected |
                                              default({}) |
                                              combine(my_servers)
                                          }}"
          loop: "{{ application_definition.environments |
                    dict2items | json_query('[*].{key: key, value: value.servers}')
                 }}"
          loop_control:
            label: '{{ item.key }}'
          vars:
            my_env: '{{ item.key }}'
            my_servers: >-
              {%- set servers={} -%}
              {%- for server_name, server in item.value.iteritems() -%}
                {%- do servers.update( {server_name: server
                                        | combine({ "server_environment": item.key })
                                       }
                                     )
                -%}
              {%- endfor -%}
              {{ servers }}

        - name: Display debug variables
          debug:
            var: application_environment_location
            verbosity: 4
          loop: "{{ application_servers_selected | dict2items }}"
          loop_control:
            label: '{{ item.key }}'

        - name: Check data coherence
          assert:
            that:
              - item.value.server_environment is defined
              - item.value.server_location is defined
              - item.value.server_role is defined
              - application_definition_role_default is defined
              - application_definition_role is defined
              - application_definition_location_role_default is defined
              - application_definition_location_role is defined
              - application_environment_role_default is defined
              - application_environment_role is defined
              - application_environment_locations is defined
              - application_environment_location is defined
              - application_environment_location_role_default is defined
              - application_environment_location_role is defined

          loop: "{{ application_servers_selected | dict2items }}"
          loop_control:
            label: '{{ item.key }}'

        # Populate servers data
        - name: Populate servers data
          set_fact:
            application_servers_selected: >-
              {{ application_servers_selected |
                 combine({ item.key: {}
                            | combine( application_definition_role_default )
                            | combine( application_definition_role )
                            | combine( application_definition_location_role_default )
                            | combine( application_definition_location_role )
                            | combine( application_environment_role_default )
                            | combine( application_environment_role )
                            | combine( application_environment_location_role_default )
                            | combine( application_environment_location_role )
                            | combine( item.value )
                         })
              }}

          loop: "{{ application_servers_selected | dict2items }}"
          loop_control:
            label: '{{ item.key }}'

        - debug:
            var: application_servers_selected
            verbosity: 4

    # -----------------------------------------------------------------------------
    # Append calulated value
    # -----------------------------------------------------------------------------
    - name: Append calculated value
      block:
        # Check values are allowed
        - name: Check defintion values are allowed
          assert:
            that:
              - os_allowed_values[item.value.server_os] is defined
              - vm_provider[item.value.server_location] is defined
              - vm_provider[item.value.server_location][server_os_familly] is defined
          loop: "{{ application_servers_selected | dict2items }}"
          loop_control:
            label: '{{ item.key }}'
          vars:
            server_os_familly: '{{ os_allowed_values[item.value.server_os] | default() }}'

        # Add calculated value
        - name: Add calculated value
          set_fact:
            application_servers_selected: >-
              {{ application_servers_selected |
                 combine({ item.key: item.value
                            | combine({"server_provider": server_provider} )
                            | combine({"server_os_familly": server_os_familly} )
                         })
              }}

          loop: "{{ application_servers_selected | dict2items }}"
          loop_control:
            label: '{{ item.key }}'
          vars:
            server_os_familly: '{{ os_allowed_values[item.value.server_os] | default() }}'
            server_provider:   '{{ vm_provider[item.value.server_location][server_os_familly] }}'
